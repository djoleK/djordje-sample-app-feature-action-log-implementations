/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.action.log.api.generated;

import com.action.log.models.generated.Action;
import com.action.log.models.generated.ActionEvent;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-08-11T12:13:20.462124+02:00[Europe/Belgrade]")
@Validated
@Api(value = "action-log", description = "the action-log API")
public interface ActionLogApi {

    default ActionLogApiDelegate getDelegate() {
        return new ActionLogApiDelegate() {};
    }

    /**
     * GET /action-log : Get a list of all action events.
     * Successful response - returns an array of ActionEvent entities.
     *
     * @param loggedInUserId Logged in user ID. (optional)
     * @param customerId Customer ID. (optional)
     * @param action Action performed on the customer. (optional)
     * @return Succesful response - returns an array of Action Events. (status code 200)
     *         or Unauthorized. (status code 401)
     *         or We&#39;re not supposed to be here. (status code 500)
     */
    @ApiOperation(value = "Get a list of all action events.", nickname = "actionLogGet", notes = "Successful response - returns an array of ActionEvent entities.", response = ActionEvent.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Succesful response - returns an array of Action Events.", response = ActionEvent.class, responseContainer = "List"),
        @ApiResponse(code = 401, message = "Unauthorized."),
        @ApiResponse(code = 500, message = "We're not supposed to be here.") })
    @GetMapping(
        value = "/action-log",
        produces = { "application/json" }
    )
    default ResponseEntity<List<ActionEvent>> actionLogGet(@ApiParam(value = "Logged in user ID.") @Valid @RequestParam(value = "loggedInUserId", required = false) String loggedInUserId,@ApiParam(value = "Customer ID.") @Valid @RequestParam(value = "customerId", required = false) String customerId,@ApiParam(value = "Action performed on the customer.", allowableValues = "CREATED, UPDATED, DELETED") @Valid @RequestParam(value = "action", required = false) Action action) {
        return getDelegate().actionLogGet(loggedInUserId, customerId, action);
    }

}
